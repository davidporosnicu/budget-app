// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseForm correctly 1`] = `
<div>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Description"
      type="text"
      value=""
    />
    <input
      onChange={[Function]}
      placeholder="Amount"
      type="text"
      value=""
    />
    <p>
      Jan 1st 1970
    </p>
    <textarea
      onChange={[Function]}
      placeholder="Add a note for your expense (optional)"
      value=""
    />
    <button>
      Add Expense
    </button>
  </form>
</div>
`;

exports[`should render ExpensesForm with expense data 1`] = `
<div>
  <form
    onSubmit={[Function]}
  >
    <input
      autoFocus={true}
      onChange={[Function]}
      placeholder="Description"
      type="text"
      value="Rent"
    />
    <input
      onChange={[Function]}
      placeholder="Amount"
      type="text"
      value={1095}
    />
    <p>
      Dec 28th 1969
    </p>
    <textarea
      onChange={[Function]}
      placeholder="Add a note for your expense (optional)"
      value=""
    />
    <button>
      Add Expense
    </button>
  </form>
</div>
`;

exports[`should render error for invalid form submission 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ExpenseForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p>
          Please provide description and amount
        </p>,
        <form
          onSubmit={[Function]}
        >
          <input
            autoFocus={true}
            onChange={[Function]}
            placeholder="Description"
            type="text"
            value=""
          />
          <input
            onChange={[Function]}
            placeholder="Amount"
            type="text"
            value=""
          />
          <p>
            Jan 1st 1970
          </p>
          <textarea
            onChange={[Function]}
            placeholder="Add a note for your expense (optional)"
            value=""
          />
          <button>
            Add Expense
          </button>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Please provide description and amount",
        },
        "ref": null,
        "rendered": "Please provide description and amount",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              autoFocus={true}
              onChange={[Function]}
              placeholder="Description"
              type="text"
              value=""
            />,
            <input
              onChange={[Function]}
              placeholder="Amount"
              type="text"
              value=""
            />,
            <p>
              Jan 1st 1970
            </p>,
            <textarea
              onChange={[Function]}
              placeholder="Add a note for your expense (optional)"
              value=""
            />,
            <button>
              Add Expense
            </button>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "autoFocus": true,
              "onChange": [Function],
              "placeholder": "Description",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "Amount",
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Jan 1st 1970",
            },
            "ref": null,
            "rendered": "Jan 1st 1970",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "onChange": [Function],
              "placeholder": "Add a note for your expense (optional)",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Add Expense",
            },
            "ref": null,
            "rendered": "Add Expense",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p>
            Please provide description and amount
          </p>,
          <form
            onSubmit={[Function]}
          >
            <input
              autoFocus={true}
              onChange={[Function]}
              placeholder="Description"
              type="text"
              value=""
            />
            <input
              onChange={[Function]}
              placeholder="Amount"
              type="text"
              value=""
            />
            <p>
              Jan 1st 1970
            </p>
            <textarea
              onChange={[Function]}
              placeholder="Add a note for your expense (optional)"
              value=""
            />
            <button>
              Add Expense
            </button>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Please provide description and amount",
          },
          "ref": null,
          "rendered": "Please provide description and amount",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <input
                autoFocus={true}
                onChange={[Function]}
                placeholder="Description"
                type="text"
                value=""
              />,
              <input
                onChange={[Function]}
                placeholder="Amount"
                type="text"
                value=""
              />,
              <p>
                Jan 1st 1970
              </p>,
              <textarea
                onChange={[Function]}
                placeholder="Add a note for your expense (optional)"
                value=""
              />,
              <button>
                Add Expense
              </button>,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "autoFocus": true,
                "onChange": [Function],
                "placeholder": "Description",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Amount",
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Jan 1st 1970",
              },
              "ref": null,
              "rendered": "Jan 1st 1970",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "onChange": [Function],
                "placeholder": "Add a note for your expense (optional)",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Expense",
              },
              "ref": null,
              "rendered": "Add Expense",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
